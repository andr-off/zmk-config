/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC        &kp N1       &kp N2      &kp N3      &kp N4         &kp N5                                    &kp N6  &kp N7         &kp N8      &kp N9      &kp N0          &kp MINUS
&kp TAB        &kp Q        &kp W       &kp E       &kp R          &kp T                                     &kp Y   &kp U          &kp I       &kp O       &kp P           &kp LBKT
&kp CLCK       &mt LCTRL A  &mt LALT S  &mt RGUI D  &mt LSHFT F    &kp G                                     &kp H   &mt RSHFT J    &mt LGUI K  &mt LALT L  &mt LCTRL SEMI  &kp SQT
&kp BACKSLASH  &kp Z        &kp X       &kp C       &kp V          &kp B   &kp GRAVE      &kp RIGHT_BRACKET  &kp N   &kp M          &kp COMMA   &kp DOT     &kp FSLH        &kp EQUAL
                                        &kp RET     &kp BACKSPACE  &mo 1   &lt 3 SPACE    &lt 4 SPACE        &mo 2   &kp BACKSPACE  &kp RET
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // --------------------------------------------------------------------------------------------------------------
            // | LPAD  | BRDn | BRUp |  MUT |  Vo- |  Vo+ |                   |      |       |       |      |       |       |
            // |  F1   |  F2  |  F3  |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !   |  @   |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |      |      |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                       |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &kp F7     &kp F8            &kp F9             &kp F10        &kp F11       &kp F12
&trans  &trans  &trans  &trans  &trans  &trans                    &kp PLUS   &kp MINUS         &kp KP_MULTIPLY    &kp KP_DIVIDE  &kp KP_EQUAL  &kp BACKSLASH
&trans  &trans  &trans  &trans  &trans  &trans                    &kp GRAVE  &kp LESS_THAN     &kp GREATER_THAN   &kp LPAR       &kp RPAR      &kp TILDE
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp PIPE   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LBRC       &kp RBRC      &kp UNDERSCORE
                        &trans  &trans  &trans  &trans    &trans  &trans     &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer_2 {
            bindings = <
&kp F1            &kp F2         &kp F3        &kp F4      &kp F5        &kp F6                           &trans  &trans  &trans  &trans  &trans  &trans
&trans            &trans         &trans        &trans      &trans        &kp RS(F6)                       &trans  &trans  &trans  &trans  &trans  &trans
&trans            &kp EXCL       &kp AT        &kp HASH    &kp DOLLAR    &kp PRCNT                        &trans  &trans  &trans  &trans  &trans  &trans
&kp K_PLAY_PAUSE  &kp C_BRI_DEC  &kp C_BRI_UP  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp DEL    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                               &trans      &trans        &trans        &trans     &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans          &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans          &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans          &trans        &trans     &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raize_layer_2 {
            bindings = <
&trans  &trans     &kp KP_PLUS  &kp KP_MINUS  &kp KP_MULTIPLY  &kp KP_DIVIDE                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &kp KP_N7    &kp KP_N8     &kp KP_N9        &kp KP_EQUAL                     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &kp KP_N4    &kp KP_N5     &kp KP_N6        &trans                           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp KP_N0  &kp KP_N1    &kp KP_N2     &kp KP_N3        &trans         &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                &trans        &trans           &trans         &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
